name: Wails Cross-Platform Build

on:
  push:
    branches:
      - main  # 或者其他你希望触发构建的分支
  pull_request:
    branches:
      - main  # 或者其他你希望触发构建的分支

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60  # 设置作业最大运行时间为 60 分钟
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # 支持的操作系统
        go-version: [1.22]  # 配置 Go 版本


    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/*.go') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
          ${{ runner.os }}-go-
    
    - name: Install Wails dependencies
      run: |
        go install github.com/wailsapp/wails/v2/cmd/wails@latest
        wails doctor  # 确保项目没有问题
    # 安装缺失的依赖库
    - name: Install WebKitGTK dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pkg-config \
          libgtk-3-dev \
          libgirepository1.0-dev \
          libglib2.0-dev
        # 添加 WebKitGTK 的 PPA 并安装依赖
        sudo add-apt-repository ppa:webkitgtk-team/ppa -y
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.0-dev
    # 修复 esbuild 二进制文件的问题，删除旧的 node_modules 并重新安装依赖
    - name: Clean up npm cache and node_modules
      run: |
        cd frontend
        npm install  # 重新安装依赖
        cd ..

    - name: Build Wails application for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        GOOS=linux GOARCH=amd64 wails build

    - name: Build Wails application for Windows
      if: matrix.os == 'windows-latest'
      run: |
        GOOS=windows GOARCH=amd64 wails build

    - name: Build Wails application for macOS
      if: matrix.os == 'macos-latest'
      run: |
        GOOS=darwin GOARCH=amd64 wails build

    - name: Upload Build Artifacts
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: wails-build-${{ matrix.os }}
        path: dist/
